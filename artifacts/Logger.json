{
  "contractName": "Logger",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "topic1",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "topic2",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_topic1",
          "type": "bytes32"
        },
        {
          "name": "_topic2",
          "type": "bytes32"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "log",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_topic1\",\"type\":\"bytes32\"},{\"name\":\"_topic2\",\"type\":\"bytes32\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"log\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"topic1\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"topic2\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Log\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Disberse LTD\",\"methods\":{\"log(bytes32,bytes32,bytes)\":{\"params\":{\"_data\":\"Arbitrary log data\",\"_topic1\":\"First topic.\",\"_topic2\":\"Secod topic.\"}}},\"title\":\"Logger\"},\"userdoc\":{\"methods\":{\"log(bytes32,bytes32,bytes)\":{\"notice\":\"Create a log with arbitrary data, sender and up to two topics. If topics are not required, leave them blank.\"}},\"notice\":\"Logger contract can log arbitrary data while indexing the sender and up to two topics.\"}},\"settings\":{\"compilationTarget\":{\"/home/ohm/dev/dsb/smart-contracts/contracts/Logger.sol\":\"Logger\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ohm/dev/dsb/smart-contracts/contracts/Logger.sol\":{\"keccak256\":\"0x62c023235b39345bfc8d7ee7629b4ca477e0c542f273032ecf2b2b0ce77ff1b2\",\"urls\":[\"bzzr://3569f4108245be4b11b10815c1f534a48f750248aa8bafc7311e7824ff9f3d46\",\"dweb:/ipfs/QmWzFpkKXzWPn3M1Q2XbTGKxnh47fU517BnmQ1TsCXHwmC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610155806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e2ed58bd14610030575b600080fd5b6100ac6004803603606081101561004657600080fd5b81359160208101359181019060608101604082013564010000000081111561006d57600080fd5b82018360208201111561007f57600080fd5b803590602001918460018302840111640100000000831117156100a157600080fd5b5090925090506100ae565b005b8284336001600160a01b03167f0b01434da821b79186e25cd659fd05d612b193bd043e05fa9a90e9daa08506b7858560405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a45050505056fea265627a7a7230582095fca8f112f217f0ed121fee25050afb35597ecf1910764bc430901b0dfa03a864736f6c634300050a0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e2ed58bd14610030575b600080fd5b6100ac6004803603606081101561004657600080fd5b81359160208101359181019060608101604082013564010000000081111561006d57600080fd5b82018360208201111561007f57600080fd5b803590602001918460018302840111640100000000831117156100a157600080fd5b5090925090506100ae565b005b8284336001600160a01b03167f0b01434da821b79186e25cd659fd05d612b193bd043e05fa9a90e9daa08506b7858560405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a45050505056fea265627a7a7230582095fca8f112f217f0ed121fee25050afb35597ecf1910764bc430901b0dfa03a864736f6c634300050a0032",
  "sourceMap": "176:608:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:608:1;;;;;;;",
  "deployedSourceMap": "176:608:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:608:1;;;;;;;;;;;;;;;;;;;641:140;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;641:140:1;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;641:140:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;641:140:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;641:140:1;;-1:-1:-1;641:140:1;-1:-1:-1;641:140:1;:::i;:::-;;;759:7;750;738:10;-1:-1:-1;;;;;734:40:1;;768:5;;734:40;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;734:40:1;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;734:40:1;;;;-1:-1:-1;734:40:1;;-1:-1:-1;;;;734:40:1;641:140;;;;:::o",
  "source": "pragma solidity ^0.5.10;\n\n/**\n * @title Logger\n * @author Disberse LTD\n * @notice Logger contract can log arbitrary data while indexing the sender and up to two\n * topics.\n */\ncontract Logger {\n\n    /**\n     * @dev Emit a log with arbitrary data, sender and up to two topics.\n     */\n    event Log(address indexed src, bytes32 indexed topic1, bytes32 indexed topic2, bytes data);\n\n    /**\n     * @notice Create a log with arbitrary data, sender and up to two topics.\n     * If topics are not required, leave them blank.\n     * @param _topic1 First topic.\n     * @param _topic2 Secod topic.\n     * @param _data Arbitrary log data\n     */\n    function log(bytes32 _topic1, bytes32 _topic2, bytes calldata _data) external {\n        emit Log(msg.sender, _topic1, _topic2, _data);\n    }\n\n}\n",
  "sourcePath": "/home/ohm/dev/dsb/smart-contracts/contracts/Logger.sol",
  "ast": {
    "absolutePath": "/home/ohm/dev/dsb/smart-contracts/contracts/Logger.sol",
    "exportedSymbols": {
      "Logger": [
        722
      ]
    },
    "id": 723,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 693,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Logger\n@author Disberse LTD\n@notice Logger contract can log arbitrary data while indexing the sender and up to two\ntopics.",
        "fullyImplemented": true,
        "id": 722,
        "linearizedBaseContracts": [
          722
        ],
        "name": "Logger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Emit a log with arbitrary data, sender and up to two topics.",
            "id": 703,
            "name": "Log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "indexed": true,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "298:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 697,
                  "indexed": true,
                  "name": "topic1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "319:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "indexed": true,
                  "name": "topic2",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "343:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "367:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "297:81:1"
            },
            "src": "288:91:1"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "719:62:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "738:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "738:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 715,
                        "name": "_topic1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "750:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 716,
                        "name": "_topic2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "759:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 717,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "768:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 712,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "734:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32,bytes memory)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 719,
                  "nodeType": "EmitStatement",
                  "src": "729:45:1"
                }
              ]
            },
            "documentation": "@notice Create a log with arbitrary data, sender and up to two topics.\nIf topics are not required, leave them blank.\n@param _topic1 First topic.\n@param _topic2 Secod topic.\n@param _data Arbitrary log data",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "log",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "name": "_topic1",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "654:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 707,
                  "name": "_topic2",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "671:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "688:20:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:56:1"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:1"
            },
            "scope": 722,
            "src": "641:140:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 723,
        "src": "176:608:1"
      }
    ],
    "src": "0:785:1"
  },
  "legacyAST": {
    "absolutePath": "/home/ohm/dev/dsb/smart-contracts/contracts/Logger.sol",
    "exportedSymbols": {
      "Logger": [
        722
      ]
    },
    "id": 723,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 693,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Logger\n@author Disberse LTD\n@notice Logger contract can log arbitrary data while indexing the sender and up to two\ntopics.",
        "fullyImplemented": true,
        "id": 722,
        "linearizedBaseContracts": [
          722
        ],
        "name": "Logger",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Emit a log with arbitrary data, sender and up to two topics.",
            "id": 703,
            "name": "Log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "indexed": true,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "298:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 697,
                  "indexed": true,
                  "name": "topic1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "319:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "indexed": true,
                  "name": "topic2",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "343:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "367:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "297:81:1"
            },
            "src": "288:91:1"
          },
          {
            "body": {
              "id": 720,
              "nodeType": "Block",
              "src": "719:62:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "738:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "738:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 715,
                        "name": "_topic1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "750:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 716,
                        "name": "_topic2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "759:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 717,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "768:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 712,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "734:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32,bytes memory)"
                      }
                    },
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 719,
                  "nodeType": "EmitStatement",
                  "src": "729:45:1"
                }
              ]
            },
            "documentation": "@notice Create a log with arbitrary data, sender and up to two topics.\nIf topics are not required, leave them blank.\n@param _topic1 First topic.\n@param _topic2 Secod topic.\n@param _data Arbitrary log data",
            "id": 721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "log",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "name": "_topic1",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "654:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 707,
                  "name": "_topic2",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "671:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "688:20:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:56:1"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:1"
            },
            "scope": 722,
            "src": "641:140:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 723,
        "src": "176:608:1"
      }
    ],
    "src": "0:785:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-17T01:13:52.669Z",
  "devdoc": {
    "author": "Disberse LTD",
    "methods": {
      "log(bytes32,bytes32,bytes)": {
        "params": {
          "_data": "Arbitrary log data",
          "_topic1": "First topic.",
          "_topic2": "Secod topic."
        }
      }
    },
    "title": "Logger"
  },
  "userdoc": {
    "methods": {
      "log(bytes32,bytes32,bytes)": {
        "notice": "Create a log with arbitrary data, sender and up to two topics. If topics are not required, leave them blank."
      }
    },
    "notice": "Logger contract can log arbitrary data while indexing the sender and up to two topics."
  }
}