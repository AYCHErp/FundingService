{
  "contractName": "TargetMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "src",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "LogCall",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fail",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fail\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogCall\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"fail()\":{\"details\":\"Calling this function will always revert.\"},\"getValue()\":{\"details\":\"Return a value.\"},\"setTarget(address)\":{\"details\":\"Changes the target address. Can only be called from the address of this contract. NOTE: we don't inherit from SelfAuthorized here to avoid conflict of storage slots should the SelfAuthorized contract implementation change in the future.\",\"params\":{\"_target\":\"The new target address that proxies will delegatecall to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ohm/dev/dsb/smart-contracts/contracts/mocks/TargetMock.sol\":\"TargetMock\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ohm/dev/dsb/smart-contracts/contracts/mocks/TargetMock.sol\":{\"keccak256\":\"0xeac51d01ab3d11f062fc9aec24926d227762d2da690ecba26ebb0382eecff2db\",\"urls\":[\"bzzr://ff0d822da3eb45e8995ced50438a3c5d709f94c65e51b328f972b7e70f422c03\",\"dweb:/ipfs/QmVSWHpd6t158H1yPx6kKh3xziNP9Ufkyf4w4qwc8HMejH\"]},\"/home/ohm/dev/dsb/smart-contracts/contracts/multisig/ProxyTarget.sol\":{\"keccak256\":\"0xae46e10bfa7ae267982111e96a6d9ef51233d30e8a075f161df123607b724c3e\",\"urls\":[\"bzzr://0a3b61780585f390cad8feee8eb56776f649314bfccfdc5346abb63e92ff97d2\",\"dweb:/ipfs/QmSpnt8ABrajQki3eYvu59EjWyd2rmGUj7wSEGkZSjZvY4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610296806100206000396000f3fe60806040526004361061003f5760003560e01c806320965255146100c4578063776d1a01146100eb578063a9cc471814610120578063d4b8399214610135575b7f202ca0633e9bf52b1d9ffc5784badd7db89fdd8a05bea524c99853429017f7ae333460003660405180856001600160a01b03166001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a1005b3480156100d057600080fd5b506100d9610166565b60408051918252519081900360200190f35b3480156100f757600080fd5b5061011e6004803603602081101561010e57600080fd5b50356001600160a01b031661016b565b005b34801561012c57600080fd5b5061011e610219565b34801561014157600080fd5b5061014a610252565b604080516001600160a01b039092168252519081900360200190f35b600d90565b3330146101ab576040805162461bcd60e51b815260206004820152600960248201526837b7363c96b9b2b63360b91b604482015290519081900360640190fd5b6001600160a01b0381166101f7576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a590b5d185c99d95d60921b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805162461bcd60e51b815260206004820152600960248201526832bc31b2b83a34b7b760b91b604482015290519081900360640190fd5b6000546001600160a01b03168156fea265627a7a72305820ac8bbd39e5c9c713fbb767c19987e997183840d8933d7dafa4ae9c8dce47032964736f6c634300050a0032",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806320965255146100c4578063776d1a01146100eb578063a9cc471814610120578063d4b8399214610135575b7f202ca0633e9bf52b1d9ffc5784badd7db89fdd8a05bea524c99853429017f7ae333460003660405180856001600160a01b03166001600160a01b03168152602001848152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a1005b3480156100d057600080fd5b506100d9610166565b60408051918252519081900360200190f35b3480156100f757600080fd5b5061011e6004803603602081101561010e57600080fd5b50356001600160a01b031661016b565b005b34801561012c57600080fd5b5061011e610219565b34801561014157600080fd5b5061014a610252565b604080516001600160a01b039092168252519081900360200190f35b600d90565b3330146101ab576040805162461bcd60e51b815260206004820152600960248201526837b7363c96b9b2b63360b91b604482015290519081900360640190fd5b6001600160a01b0381166101f7576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a590b5d185c99d95d60921b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6040805162461bcd60e51b815260206004820152600960248201526832bc31b2b83a34b7b760b91b604482015290519081900360640190fd5b6000546001600160a01b03168156fea265627a7a72305820ac8bbd39e5c9c713fbb767c19987e997183840d8933d7dafa4ae9c8dce47032964736f6c634300050a0032",
  "sourceMap": "65:627:20:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65:627:20;;;;;;;",
  "deployedSourceMap": "65:627:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:40;335:10;347:9;358:8;;327:40;;;;-1:-1:-1;;;;;327:40:20;-1:-1:-1;;;;;327:40:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;327:40:20;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;327:40:20;;;;-1:-1:-1;327:40:20;;-1:-1:-1;;;;;;327:40:20;65:627;586:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:103:20;;;:::i;:::-;;;;;;;;;;;;;;;;883:206:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;883:206:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;883:206:24;-1:-1:-1;;;;;883:206:24;;:::i;:::-;;450:86:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;450:86:20;;;:::i;465:21:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:21:24;;;:::i;:::-;;;;-1:-1:-1;;;;;465:21:24;;;;;;;;;;;;;;586:103:20;680:2;586:103;:::o;883:206:24:-;957:10;979:4;957:27;949:49;;;;;-1:-1:-1;;;949:49:24;;;;;;;;;;;;-1:-1:-1;;;949:49:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;1016:21:24;;1008:48;;;;;-1:-1:-1;;;1008:48:24;;;;;;;;;;;;-1:-1:-1;;;1008:48:24;;;;;;;;;;;;;;;1066:6;:16;;-1:-1:-1;;;;;;1066:16:24;-1:-1:-1;;;;;1066:16:24;;;;;;;;;;883:206::o;450:86:20:-;510:19;;;-1:-1:-1;;;510:19:20;;;;;;;;;;;;-1:-1:-1;;;510:19:20;;;;;;;;;;;;;;465:21:24;;;-1:-1:-1;;;;;465:21:24;;:::o",
  "source": "pragma solidity ^0.5.10;\n\nimport \"../multisig/ProxyTarget.sol\";\n\ncontract TargetMock is ProxyTarget {\n\n    event LogCall(address src, uint256 val, bytes data);\n\n    /**\n     * @dev Fallback function will log the call parameters (sender, value, data).\n     */\n    function ()\n        external\n        payable\n    {\n        emit LogCall(msg.sender, msg.value, msg.data);\n    }\n\n    /**\n     * @dev Calling this function will always revert.\n     */\n    function fail()\n        external\n        pure\n    {\n        revert(\"exception\");\n    }\n\n    /**\n     * @dev Return a value.\n     */\n    function getValue()\n        external\n        pure\n        returns (uint)\n    {\n        return 13;\n    }\n\n}\n",
  "sourcePath": "/home/ohm/dev/dsb/smart-contracts/contracts/mocks/TargetMock.sol",
  "ast": {
    "absolutePath": "/home/ohm/dev/dsb/smart-contracts/contracts/mocks/TargetMock.sol",
    "exportedSymbols": {
      "TargetMock": [
        1996
      ]
    },
    "id": 1997,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1955,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "absolutePath": "/home/ohm/dev/dsb/smart-contracts/contracts/multisig/ProxyTarget.sol",
        "file": "../multisig/ProxyTarget.sol",
        "id": 1956,
        "nodeType": "ImportDirective",
        "scope": 1997,
        "sourceUnit": 2778,
        "src": "26:37:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1957,
              "name": "ProxyTarget",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2777,
              "src": "88:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProxyTarget_$2777",
                "typeString": "contract ProxyTarget"
              }
            },
            "id": 1958,
            "nodeType": "InheritanceSpecifier",
            "src": "88:11:20"
          }
        ],
        "contractDependencies": [
          2777
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1996,
        "linearizedBaseContracts": [
          1996,
          2777
        ],
        "name": "TargetMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1966,
            "name": "LogCall",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "indexed": false,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "121:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1962,
                  "indexed": false,
                  "name": "val",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "134:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1964,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "147:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:38:20"
            },
            "src": "107:52:20"
          },
          {
            "body": {
              "id": 1978,
              "nodeType": "Block",
              "src": "312:62:20",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1970,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "335:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "335:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1972,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "347:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "347:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1974,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "358:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "358:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1969,
                      "name": "LogCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1966,
                      "src": "327:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "327:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1977,
                  "nodeType": "EmitStatement",
                  "src": "322:45:20"
                }
              ]
            },
            "documentation": "@dev Fallback function will log the call parameters (sender, value, data).",
            "id": 1979,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:2:20"
            },
            "returnParameters": {
              "id": 1968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:20"
            },
            "scope": 1996,
            "src": "263:111:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1986,
              "nodeType": "Block",
              "src": "500:36:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "657863657074696f6e",
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "517:11:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70ef451eed40bba575b01d338fbd9a1186d53022e4bc0eb48b34e0e076779ce0",
                          "typeString": "literal_string \"exception\""
                        },
                        "value": "exception"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_70ef451eed40bba575b01d338fbd9a1186d53022e4bc0eb48b34e0e076779ce0",
                          "typeString": "literal_string \"exception\""
                        }
                      ],
                      "id": 1982,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4303,
                        4304
                      ],
                      "referencedDeclaration": 4304,
                      "src": "510:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "510:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1985,
                  "nodeType": "ExpressionStatement",
                  "src": "510:19:20"
                }
              ]
            },
            "documentation": "@dev Calling this function will always revert.",
            "id": 1987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fail",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:2:20"
            },
            "returnParameters": {
              "id": 1981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:0:20"
            },
            "scope": 1996,
            "src": "450:86:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1994,
              "nodeType": "Block",
              "src": "663:26:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3133",
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "680:2:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_13_by_1",
                      "typeString": "int_const 13"
                    },
                    "value": "13"
                  },
                  "functionReturnParameters": 1991,
                  "id": 1993,
                  "nodeType": "Return",
                  "src": "673:9:20"
                }
              ]
            },
            "documentation": "@dev Return a value.",
            "id": 1995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:20"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1990,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1995,
                  "src": "653:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "652:6:20"
            },
            "scope": 1996,
            "src": "586:103:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1997,
        "src": "65:627:20"
      }
    ],
    "src": "0:693:20"
  },
  "legacyAST": {
    "absolutePath": "/home/ohm/dev/dsb/smart-contracts/contracts/mocks/TargetMock.sol",
    "exportedSymbols": {
      "TargetMock": [
        1996
      ]
    },
    "id": 1997,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1955,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "absolutePath": "/home/ohm/dev/dsb/smart-contracts/contracts/multisig/ProxyTarget.sol",
        "file": "../multisig/ProxyTarget.sol",
        "id": 1956,
        "nodeType": "ImportDirective",
        "scope": 1997,
        "sourceUnit": 2778,
        "src": "26:37:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1957,
              "name": "ProxyTarget",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2777,
              "src": "88:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProxyTarget_$2777",
                "typeString": "contract ProxyTarget"
              }
            },
            "id": 1958,
            "nodeType": "InheritanceSpecifier",
            "src": "88:11:20"
          }
        ],
        "contractDependencies": [
          2777
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1996,
        "linearizedBaseContracts": [
          1996,
          2777
        ],
        "name": "TargetMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1966,
            "name": "LogCall",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "indexed": false,
                  "name": "src",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "121:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1962,
                  "indexed": false,
                  "name": "val",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "134:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1964,
                  "indexed": false,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "147:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:38:20"
            },
            "src": "107:52:20"
          },
          {
            "body": {
              "id": 1978,
              "nodeType": "Block",
              "src": "312:62:20",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1970,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "335:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "335:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1972,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "347:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "347:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1974,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4298,
                          "src": "358:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "358:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1969,
                      "name": "LogCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1966,
                      "src": "327:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "327:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1977,
                  "nodeType": "EmitStatement",
                  "src": "322:45:20"
                }
              ]
            },
            "documentation": "@dev Fallback function will log the call parameters (sender, value, data).",
            "id": 1979,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:2:20"
            },
            "returnParameters": {
              "id": 1968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:20"
            },
            "scope": 1996,
            "src": "263:111:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1986,
              "nodeType": "Block",
              "src": "500:36:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "657863657074696f6e",
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "517:11:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70ef451eed40bba575b01d338fbd9a1186d53022e4bc0eb48b34e0e076779ce0",
                          "typeString": "literal_string \"exception\""
                        },
                        "value": "exception"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_70ef451eed40bba575b01d338fbd9a1186d53022e4bc0eb48b34e0e076779ce0",
                          "typeString": "literal_string \"exception\""
                        }
                      ],
                      "id": 1982,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4303,
                        4304
                      ],
                      "referencedDeclaration": 4304,
                      "src": "510:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "510:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1985,
                  "nodeType": "ExpressionStatement",
                  "src": "510:19:20"
                }
              ]
            },
            "documentation": "@dev Calling this function will always revert.",
            "id": 1987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fail",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:2:20"
            },
            "returnParameters": {
              "id": 1981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:0:20"
            },
            "scope": 1996,
            "src": "450:86:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1994,
              "nodeType": "Block",
              "src": "663:26:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3133",
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "680:2:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_13_by_1",
                      "typeString": "int_const 13"
                    },
                    "value": "13"
                  },
                  "functionReturnParameters": 1991,
                  "id": 1993,
                  "nodeType": "Return",
                  "src": "673:9:20"
                }
              ]
            },
            "documentation": "@dev Return a value.",
            "id": 1995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:20"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1990,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1995,
                  "src": "653:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "652:6:20"
            },
            "scope": 1996,
            "src": "586:103:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1997,
        "src": "65:627:20"
      }
    ],
    "src": "0:693:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-17T01:13:52.690Z",
  "devdoc": {
    "methods": {
      "fail()": {
        "details": "Calling this function will always revert."
      },
      "getValue()": {
        "details": "Return a value."
      },
      "setTarget(address)": {
        "details": "Changes the target address. Can only be called from the address of this contract. NOTE: we don't inherit from SelfAuthorized here to avoid conflict of storage slots should the SelfAuthorized contract implementation change in the future.",
        "params": {
          "_target": "The new target address that proxies will delegatecall to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}